# Generated by Django 3.1.3 on 2020-11-03 16:14

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Controller',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.TextField(verbose_name='first_name')),
                ('lastName', models.TextField(verbose_name='last_name')),
                ('userName', models.TextField(verbose_name='user_name')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.TextField()),
                ('phone', models.TextField()),
                ('isActive', models.BooleanField(default=True, verbose_name='is_active')),
                ('isDeleted', models.BooleanField(default=False, verbose_name='is_deleted')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('lastActiveOn', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last_active_on')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.TextField(verbose_name='first_name')),
                ('lastName', models.TextField(verbose_name='last_name')),
                ('userName', models.TextField(verbose_name='user_name')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.TextField()),
                ('phone', models.TextField()),
                ('isActive', models.BooleanField(default=True, verbose_name='is_active')),
                ('isDeleted', models.BooleanField(default=False, verbose_name='is_deleted')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('lastActiveOn', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last_active_on')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.TextField(verbose_name='first_name')),
                ('lastName', models.TextField(verbose_name='last_name')),
                ('userName', models.TextField(verbose_name='user_name')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.TextField()),
                ('phone', models.TextField()),
                ('isActive', models.BooleanField(default=True, verbose_name='is_active')),
                ('isDeleted', models.BooleanField(default=False, verbose_name='is_deleted')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('lastActiveOn', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last_active_on')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserPasswordResetTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resetToken', models.TextField(verbose_name='reset_token')),
                ('expiresAt', models.DateField(verbose_name='expires_at')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccessTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessToken', models.TextField(verbose_name='access_token')),
                ('expiresAt', models.DateTimeField(verbose_name='expires_at')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
            options={
                'verbose_name': 'User Access Token',
                'verbose_name_plural': 'User Access Tokens',
            },
        ),
        migrations.CreateModel(
            name='ManagerPasswordResetTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resetToken', models.TextField(verbose_name='reset_token')),
                ('expiresAt', models.DateField(verbose_name='expires_at')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.manager')),
            ],
        ),
        migrations.CreateModel(
            name='ManagerAccessTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessToken', models.TextField(verbose_name='access_token')),
                ('expiresAt', models.DateTimeField(verbose_name='expires_at')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.manager')),
            ],
            options={
                'verbose_name': 'Manager Access Token',
                'verbose_name_plural': 'Manager Access Tokens',
            },
        ),
        migrations.CreateModel(
            name='ControllerPasswordResetTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resetToken', models.TextField(verbose_name='reset_token')),
                ('expiresAt', models.DateField(verbose_name='expires_at')),
                ('createdAt', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateField(auto_now=True, verbose_name='updated_at')),
                ('controller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.controller')),
            ],
        ),
        migrations.CreateModel(
            name='ControllerAccessTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessToken', models.TextField(verbose_name='access_token')),
                ('expiresAt', models.DateTimeField(verbose_name='expires_at')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('controller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.controller')),
            ],
            options={
                'verbose_name': 'Controller Access Token',
                'verbose_name_plural': 'Controller Access Tokens',
            },
        ),
    ]
